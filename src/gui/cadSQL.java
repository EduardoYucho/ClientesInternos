package gui;

import dao.sqlDAO;
import model.sqlMODEL;
import outros.Letras;
import util.Util;
import vo.sqlVO;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.JDesktopPane;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.SwingConstants;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumnModel;

public class cadSQL extends javax.swing.JInternalFrame {

    private JDesktopPane desktop;

    public cadSQL(JDesktopPane desktop) {
        this.desktop = desktop;
        initComponents();
        txt_pesquisar.setDocument(new Letras());
        Enter();
        Esc();
        tamanho_colunas();
        listaInicial();
        Ordenar();
    }
    List<sqlVO> lista = new ArrayList<sqlVO>();
    int codigo;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bt_fechar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_sql = new javax.swing.JTable();
        txt_pesquisar = new javax.swing.JTextField();
        bt_buscar = new javax.swing.JButton();
        bt_editar = new javax.swing.JButton();
        bt_excluir = new javax.swing.JButton();
        bt_novo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cb_pesquisa = new javax.swing.JComboBox<>();
        cb_ordenacao = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("SQL");

        bt_fechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Cancel_16x16.png"))); // NOI18N
        bt_fechar.setText("Fechar");
        bt_fechar.setPreferredSize(new java.awt.Dimension(65, 30));
        bt_fechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_fecharActionPerformed(evt);
            }
        });

        tb_sql.setModel(new sqlMODEL(lista));
        tb_sql.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_sqlMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_sql);

        bt_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Search_16x16.png"))); // NOI18N
        bt_buscar.setText("Buscar");
        bt_buscar.setPreferredSize(new java.awt.Dimension(65, 30));
        bt_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_buscarActionPerformed(evt);
            }
        });

        bt_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Edit_16x16.png"))); // NOI18N
        bt_editar.setText("Editar");
        bt_editar.setPreferredSize(new java.awt.Dimension(61, 30));
        bt_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_editarActionPerformed(evt);
            }
        });

        bt_excluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/Remove_16x16.png"))); // NOI18N
        bt_excluir.setText("Excluir");
        bt_excluir.setPreferredSize(new java.awt.Dimension(63, 30));
        bt_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_excluirActionPerformed(evt);
            }
        });

        bt_novo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/New_16x16.png"))); // NOI18N
        bt_novo.setText("Novo");
        bt_novo.setPreferredSize(new java.awt.Dimension(57, 30));
        bt_novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_novoActionPerformed(evt);
            }
        });

        jLabel1.setText("Pesquisar por: ");

        cb_pesquisa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Descrição", "Conteúdo" }));
        cb_pesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_pesquisaActionPerformed(evt);
            }
        });

        cb_ordenacao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Código", "Nome" }));
        cb_ordenacao.setPreferredSize(new java.awt.Dimension(56, 30));

        jLabel2.setText("Ordenar por: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(bt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cb_ordenacao, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77))
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bt_novo, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_editar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bt_fechar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_pesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(cb_pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_ordenacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_fechar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_editar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_novo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_editarActionPerformed
        editar();
    }//GEN-LAST:event_bt_editarActionPerformed

    private void bt_fecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_fecharActionPerformed
        this.dispose();

    }//GEN-LAST:event_bt_fecharActionPerformed

    private void bt_novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_novoActionPerformed
        newSQL np = new newSQL(codigo, desktop, 2, this);
        desktop.add(np);
        np.setVisible(true);
        Util.centralizarTela(desktop, np);
        np.ultimoCodigo();
        np.limparCampos();
    }//GEN-LAST:event_bt_novoActionPerformed

    private void bt_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_excluirActionPerformed
        int i = JOptionPane.showConfirmDialog(this, "Tem Certeza Que Deseja Excluir o Cadastro? ", " Exclusão ",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);

        if (i == JOptionPane.YES_OPTION) {

            int linha = tb_sql.getSelectedRow();

            if (!tb_sql.isRowSelected(linha)) {
                JOptionPane.showMessageDialog(this, " Nenhum cadastro foi selecionado. Selecione "
                        + "um cadastro primeiro para fazer a exclusão ");
            } else {

                excluir();
                listaInicial();
                atualizaTabela();
            }
        }
    }//GEN-LAST:event_bt_excluirActionPerformed

    private void bt_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_buscarActionPerformed
        if (cb_pesquisa.getSelectedIndex() == 0) {
            atualizaTabela();
            listaInicial();
            Ordenar();
        } else if (cb_pesquisa.getSelectedIndex() == 1) {
            atualizaTabela();
            listaInicial1();
            Ordenar();
        }
    }//GEN-LAST:event_bt_buscarActionPerformed

    private void tb_sqlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_sqlMouseClicked
        if (evt.getClickCount() == 2) {
            int linha = tb_sql.getSelectedRow();

            sqlVO p = lista.get(linha);

            codigo = p.getCd_codigo();

            newSQL v = new newSQL(codigo, desktop, 1, this);
            desktop.add(v);
            v.setVisible(true);
            Util.centralizarTela(desktop, v);

            new sqlDAO().consultar(p.getCd_codigo());

        }        // TODO add your handling code here:
    }//GEN-LAST:event_tb_sqlMouseClicked

    private void cb_pesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_pesquisaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_pesquisaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_buscar;
    private javax.swing.JButton bt_editar;
    private javax.swing.JButton bt_excluir;
    private javax.swing.JButton bt_fechar;
    private javax.swing.JButton bt_novo;
    private javax.swing.JComboBox<String> cb_ordenacao;
    private javax.swing.JComboBox<String> cb_pesquisa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb_sql;
    private javax.swing.JTextField txt_pesquisar;
    // End of variables declaration//GEN-END:variables

    public void atualizaTabela() {
        ((AbstractTableModel) tb_sql.getModel()).fireTableDataChanged();
    }

    public void listaInicial() {
        lista.clear();
        lista.addAll(new sqlDAO().exibirBanco(txt_pesquisar.getText()));
    }

    public void listaInicial1() {
        lista.clear();
        lista.addAll(new sqlDAO().exibirBanco1(txt_pesquisar.getText()));
    }

    public void listaInicial2() {
        lista.clear();
        lista.addAll(new sqlDAO().exibirBanco2(txt_pesquisar.getText()));
    }

    public void editar() {

        int linha = tb_sql.getSelectedRow();

        if (!tb_sql.isRowSelected(linha)) {
            JOptionPane.showMessageDialog(null, " Nenhum cadastro foi selecionado. Selecione "
                    + "um primeiro para edita-lo ");
        } else {
            //       int linha = tbConsulta.getSelectedRow();
            sqlVO p = lista.get(linha);

            codigo = p.getCd_codigo();

            newSQL nsql = new newSQL(codigo, desktop, 1, this);
            desktop.add(nsql);
            nsql.setVisible(true);
            Util.centralizarTela(desktop, nsql);
            //new produtoDAO().consultar(p.getCodigo());
        }
    }

    public void excluir() {
        //int codigo = Integer.parseInt(txt_codigo.getText());
        int linha = tb_sql.getSelectedRow();
        sqlVO p = lista.get(linha);

        if (!new sqlDAO().excluir(p.getCd_codigo())) {
            // mensagem de erro para o usuario
            JOptionPane.showMessageDialog(null, "Impossível excluir cadastro!");
            return;
        } else {

            // mensagem de OK para o usuario
            JOptionPane.showMessageDialog(null, "Cadastro excluido com sucesso!");

        }
    }

    public void Enter() {

        bt_buscar.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0), "Enter");
        bt_buscar.getActionMap().put("Enter", new AbstractAction() {

            @Override

            public void actionPerformed(ActionEvent e) {
                if (cb_pesquisa.getSelectedIndex() == 0) {
                    atualizaTabela();
                    listaInicial();
                } else if (cb_pesquisa.getSelectedIndex() == 1) {
                    atualizaTabela();
                    listaInicial1();
                }
            }
        });
    }

    public void Esc() {

        bt_buscar.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), "Esc");
        bt_buscar.getActionMap().put("Esc", new AbstractAction() {

            @Override

            public void actionPerformed(ActionEvent e) {
                fecharTela();
            }
        });
    }

    public void fecharTela() {
        this.dispose();
    }

    private void tamanho_colunas() {
        DefaultTableCellRenderer rendererCentro = new DefaultTableCellRenderer();
        rendererCentro.setHorizontalAlignment(SwingConstants.CENTER);

        DefaultTableCellRenderer rendererDireita = new DefaultTableCellRenderer();
        rendererDireita.setHorizontalAlignment(SwingConstants.RIGHT);

        DefaultTableCellRenderer rendererEsquerda = new DefaultTableCellRenderer();
        rendererEsquerda.setHorizontalAlignment(SwingConstants.LEFT);

        JTableHeader header = tb_sql.getTableHeader();
        header.setPreferredSize(new Dimension(0, 20));   // define a largura do cabeçalho
        TableColumnModel modeloDaColuna = tb_sql.getColumnModel();

        modeloDaColuna.getColumn(0).setCellRenderer(rendererCentro);
        modeloDaColuna.getColumn(1).setCellRenderer(rendererEsquerda);

        modeloDaColuna.getColumn(0).setMaxWidth(80);
        modeloDaColuna.getColumn(1).setMaxWidth(2000);

    }

    public void criarArquivo() {
        File file = new File("C:\\gsan\\arq.txt");

        try {
            file.createNewFile();
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

    public void Ordenar() {
        if (cb_ordenacao.getSelectedIndex() == 0) {
            listaInicial();
        } else if (cb_ordenacao.getSelectedIndex() == 1) {
            listaInicial1();
        }
    }

}
